{"version":3,"sources":["component/Movie.js","routes/Home.js","routes/Detail.js","routes/About.js","component/NavMenu.js","component/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","background","rating","torrents720p","torrents1080p","className","to","pathname","state","src","alt","map","genre","index","Home","states","isLoading","movies","movie","medium_cover_image","background_image","torrents","url","Detail","winwidth","window","innerWidth","this","props","location","history","undefined","push","addEventListener","setState","console","log","href","React","Component","About","NavMenu","Navigation","App","getMovies","a","axios","get","data","path","exact","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.395a1737.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\"\n\nfunction Movie({id, year, title, summary, poster, genres,background,rating,torrents720p,torrents1080p}){\n    return (\n        <div className ='movie'>\n            <Link to ={{\n                pathname : `movie/${id}`,\n                state:{\n                    year,\n                    title,\n                    summary,\n                    poster,\n                    genres,\n                    background,\n                    rating,\n                    torrents720p,\n                    torrents1080p,\n                }\n            }}>\n                <img src={poster} alt={title} title={title}/>\n                <div className =\"movie_data\">\n                    <h3 className ='movie_title'>{title}</h3>\n                    <h5 className ='movie_year'>{year}</h5>\n                    <ul className=\"movie_genres\">\n                        {genres.map((genre, index)=>(\n                            <li key={index} className=\"genres_genre\">{genre}</li>\n                        ))}\n                    </ul>\n                    {/* <p className ='movie_summary'>{summary.slice(0, 180)}...</p> */}\n                </div>\n            </Link>\n        </div>\n    )\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\nexport default Movie;","import React from \"react\";\n\nimport Movie from \"../component/Movie\"\nimport \"./Home.css\"\nfunction Home(states){\n    const { states : {isLoading, movies} } = states;\n    return (\n    <section className =\"container\">\n      <div className=\"movie_list\">Movie List</div>\n      {isLoading ? \n        <div className =\"loader\">\n          <span className =\"loader_text\">Loading...</span>\n        </div> : \n        <div className ='movies'>\n          {movies.map(movie=>(\n            <Movie \n              key={movie.id} \n              id={movie.id} \n              year={movie.year} \n              title={movie.title} \n              summary={movie.summary} \n              poster={movie.medium_cover_image}\n              genres={movie.genres}\n              background={movie.background_image}\n              rating={movie.rating}\n              torrents720p={movie.torrents[0].url}\n              torrents1080p={movie.torrents[1].url}\n\n            />\n          ))}\n        </div>  \n      }\n    </section>)\n    \n    // 원리\n    // 처음 렌더가 되면 isLoading 가 ture면 div를 생성해 Loading... 라는 문구가 나오게 되고 didMount가 실행이 되면 axiosget()url 안에있는 data>data>movies 를 넣게 되고 setstate로 state 값을 변경한다.\n    // 그리고 setstate를 통해 바뀐 부분을 Update해주고 if 문이 다시 실행됨으로 외부스크립트를 불러온다. \n    // <movie />에 props를 넣어 movie.js 안에 function에 props 를 넣는다.그리고 return하게 되어 화면에 출력합니다. propTypes를 통해 id가 숫자인지, year가 숫자인지, title 이 문자열인지 체크하여 오류를 콘솔창에 나타낸다. \n}\n\nexport default Home;\n ","import React from \"react\";\nimport \"./Detail.css\"\n\nclass Detail extends React.Component {\n  // winwidth = window.innerWidth;\n  state = {\n    winwidth : window.innerWidth\n  }\n  componentDidMount() {\n    const { location, history } = this.props;\n    if (location.state === undefined) {\n      history.push(\"/\");\n    }\n    window.addEventListener(\"resize\",()=>{\n      this.setState({winwidth : window.innerWidth})\n      console.log(this.state.winwidth)\n    })\n  }\n  render() {\n    const { location } = this.props;\n    if (location.state) {\n      return (\n          <div className=\"detail_container\">\n            <img className=\"detail_background\" src={this.state.winwidth > 1090 ? location.state.background : location.state.poster}/>\n            <div className=\"detail_gird\">\n              <div className=\"detail_title\">\n                <h1>{location.state.title}</h1>\n              </div>\n              <div className=\"bottom_grid\">\n                <div className=\"detail_poster\">\n                  <img src={location.state.poster}/>\n                </div>\n                <div className=\"detail_sum\">\n                  <div className=\"detail_sum\">\n                    <h3>Summary</h3>\n                    <span>{location.state.summary}</span>\n                  </div>\n                </div>\n                <div className=\"detail_rating_down\">\n                  <div className=\"detail_rating_box\">\n                    <div className=\"detail_rating\">\n                    <span>{location.state.rating}</span>\n                    </div>\n                  </div>\n                  <div className=\"detail_down\">\n                    <h3>Download</h3>\n                    <ul>\n                      <li><a href={location.state.torrents720p}>720p</a></li>\n                      <li><a href={location.state.torrents1080p}>1080p</a></li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n    } else {\n      return null;\n    }\n  }\n}\nexport default Detail;\n","import React from \"react\";\nimport \"./About.css\";\n\nfunction About() {\n  return (\n    <div className=\"about_container\">\n      <span>\n        “Freedom is the freedom to say that two plus two make four. If that is\n        granted, all else follows.”\n      </span>\n      <span>− George Orwell, 1984</span>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\"\n\nfunction NavMenu({id, year, title, summary, poster, genres,background,rating,torrents720p,torrents1080p}) {\n    return(\n        <Link to ={{\n            pathname:`movie/${id}`,\n            state:{\n                id,\n                year,\n                title,\n                summary,\n                poster,\n                genres,\n                background,\n                rating,\n                torrents720p,\n                torrents1080p,\n            }\n        }}>{title}</Link>\n    )\n    \n}\n\nexport default NavMenu;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\"\nimport NavMenu from \"./NavMenu\";\n\nfunction Navigation(movies) {\n    return(\n        <div className =\"nav\">\n            <Link className=\"home\" to =\"/\"><span>M</span></Link>\n            <div className=\"nav_movies_list\">\n                {movies.states.map(movie=>(\n                    <NavMenu \n                        key={movie.id} \n                        id={movie.id} \n                        year={movie.year} \n                        title={movie.title} \n                        summary={movie.summary} \n                        poster={movie.medium_cover_image}\n                        genres={movie.genres}\n                        background={movie.background_image}\n                        rating={movie.rating}\n                        torrents720p={movie.torrents[0].url}\n                        torrents1080p={movie.torrents[1].url}\n                    />\n                    \n                ))}\n\n            </div>\n        </div>\n    )\n    \n}\n\nexport default Navigation;\n","import React from \"react\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\nimport About from \"./routes/About\";\nimport Navigation from \"./component/Navigation\"\nimport axios from \"axios\";\n// axios, fetch 는 JavaScript를 사용한 비동기 통신, 클라이언트와 서버간에 XML 데이터를 주고받는 기술\n// axios 는 fetch 위에 있는 작은 layer \n// npm i axios\n// axios 는 데이터를 가져오는게 느리기 때문에 약간의 시간이 있어야 한다.\n//  그것을 기다리기 위해 async() 라는 비동기 함수를 쓰고 어떤것을 기다리는 지 묻는 await 를 쓴다.\nimport \"./App.css\";\n\n\nclass App extends React.Component{\n  state = {\n    isLoading : true,\n    movies :[]\n  }\n  getMovies = async() => {\n    // const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    // console.log(movies.data.data.movies);\n    //  이것을 ES6 로 바꿔쓰면 더 간단한 코드로 바꿀 수 있다. \n    const {data : {data : {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    // console.log(movies);\n    this.setState({movies, isLoading : false})\n  }\n  componentDidMount () {\n    this.getMovies();\n  }\n  render(){\n    return (\n      <HashRouter>\n        <Navigation states={this.state.movies}/>\n        <Route path = '/' exact={true} render={()=> <Home states={this.state}/>} />\n        <Route path = '/about' component={About}/>\n        <Route path = '/movie/:id' component={Detail}/>\n      </HashRouter>\n    )\n  }\n}\n// function App(){\n// }\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}